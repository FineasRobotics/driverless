obstacle_range: 2.5
#If the robot detects an obstacle closer than obstacle_range meters, 
#it will put the obstacle in the costmap.

raytrace_range: 3.0
#used to clean/clear the costmap and 
#update the free space in it when the robot moves

footprint: [[-0.2,-0.2], [-0.2,0.2], [0.2, 0.2], [0.2,-0.2]]
#used to indicate the geometry of the robot to the navigation stack

inflation_radius: 0.25 #robot_radius: ir_of_robot
#minimal distance between the geometry of the robot and the obstacles

cost_scaling_factor: 1.0 
#the behavior of the robot around the obstacles

observation_sources: scan
#get the data from the real world or virtual and calculate the path
scan: {
  sensor_frame: base_link,  
  observation_persistence: 0.0, 
  max_obstacle_height: 0.4, 
  min_obstacle_height: 0.0, 
  data_type: LaserScan, 
  topic: /scan, 
  marking: true, 
  clearing: true
}

